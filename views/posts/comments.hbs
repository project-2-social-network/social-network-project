<div class="container">
    <div class="post" data-id="{{post.id}}">
        <img src="{{post.creator.image}}" alt="{{post.creator.username}}'s icon" width="40px">        
        <h5>{{post.creator.username}}</h5>
        <p>{{post.content}}</p>
        {{#if post.media}}<img src="{{post.media}}" alt="Media uploaded" width="400px">{{/if}}
        {{#if post.sameOwner}} <a class="remove" data-id="{{post.id}}">Delete</a>{{/if}}      
    </div>
</div>

<div class="container">
    <h3>Comments:</h3>
    <br>
    <div class="container">
        <form action="/comments/{{post.id}}" method="POST">
            <h3>{{currentUser.username}}</h3>
            <input type="text" name="creator" value="{{currentUser.id}}" hidden>
            <input type="text" minlength="1" maxlength="240" name="content" placeholder="Type your comment here" size="100px">
            <br>
            <input type="file" name="media">
            <input type="file" name="gif" id="gif-input" hidden>
            <button type="submit">COMMENT</button>
        </form>
        <button id="btn-giphys">GIF</button>
    </div>
</div>

{{!-- GIPHY SEARCH & MODAL RESULTS --}}
<div class="hidden" id="giphy-container">
    <input type="text" id="search-input">
    <button id="btn-giphy">Search</button>
  <div id="giphy-list-container"> 
        
  </div>  
</div>

<div>
    {{#each comments as | comment |}}
        <div class="comment" data-id="{{comment.id}}">
            {{#if comment.creator}}
                <img src="{{comment.creator.image}}" alt="{{comment.creator.username}}'s icon" width="100px">        
                <h5>{{comment.creator.username}}</h5>
            {{else}}
                <img src="https://t4.ftcdn.net/jpg/02/29/75/83/360_F_229758328_7x8jwCwjtBMmC6rgFzLFhZoEpLobB6L8.jpg" width="40">        
                <h5>User no longer exists</h5>
            {{/if}}
            <p>{{comment.content}}</p>
            {{#if comment.media}}<img src="{{comment.media}}" alt="Media uploaded">{{/if}}
            {{#if comment.sameOwner}} <a class="remove" data-id="{{comment.id}}">Delete</a>{{/if}}      
        </div>
    {{/each}}
</div>

<script>
  //AXIOS DELETE COMMENTS
const removeNodes = document.querySelectorAll('.remove');
for(let node of removeNodes) {
  node?.addEventListener('click', () => {
    const nodeId = node.dataset.id;
    axios.delete(`/comments/delete/${nodeId}`)
      .then(responseFromApi => {
        console.log('Success!', responseFromApi);
        if(responseFromApi.status == 204) {
          document.querySelector(`.comment[data-id="${nodeId}"]`).remove();
        }
      })
      .catch(error => console.log('Error!', error))
  })
}

//AXIOS GIPHYS-LIST
const btnGiphys = document.getElementById('btn-giphys');
const giphyContainer = document.getElementById('giphy-container');
const giphyListContainer = document.getElementById('giphy-list-container');

  btnGiphys.addEventListener('click', () => {
  if(giphyContainer.classList.contains('hidden')) {
    giphyContainer.classList.remove('hidden');

    axios.get(`/gifs/list`)
    .then(giphys => {
        giphys.data.forEach((giphy) => {
          let div = document.createElement('div');
          div.setAttribute('class', 'gif');

          let image = document.createElement('iframe');
          image.src = giphy.embed_url;
          image.setAttribute('alt', 'Gif not found');
          image.setAttribute('referrerpolicy', 'no-referrer');

          div.appendChild(image)
          giphyListContainer.appendChild(div);
        })
    })
    .catch(error => console.log('Error!'));
  } else {
    giphyContainer.classList.add('hidden');
    while(giphyListContainer.firstChild) {
      giphyListContainer.removeChild(giphyListContainer.firstChild)
    }
  };
  })

  //AXIOS SEARCH SPECIFIC GIPHY
  const searchInput = document.getElementById('search-input');
  const btnGiphy = document.getElementById('btn-giphy');


  btnGiphy.addEventListener('click', () => {
    const gifSearch = searchInput.value

    axios.post(`/gifs/${gifSearch}`)
    .then(giphys => {
      while(giphyListContainer.firstChild) {
          giphyListContainer.removeChild(giphyListContainer.firstChild)
      };

      if(giphys) {
        giphys.data.forEach((giphy) => {
          let div = document.createElement('div');
          div.setAttribute('class', 'gif');

          let image = document.createElement('iframe');
          image.src = giphy.embed_url;
          image.setAttribute('alt', 'Gif not found');
          image.setAttribute('referrerpolicy', 'no-referrer');

          div.appendChild(image)
          giphyListContainer.appendChild(div);
        })
      }
    })
    .catch(error => console.log('Error!'));
  });

  //EVENT LISTENER EACH GIF
  /* const allGifs = document.querySelectorAll('iframe');
  const gifInput = document.getElementById('gif-input');

  allGifs.forEach((gif) => {
    gif.addEventListener('click', () => {
      let src = gif.getAttribute('src');
      gifInput.setAttribute('value', gif.getAttribute('src'));
    })
  }) */
</script>