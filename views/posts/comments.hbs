<div class="dinamic-view-container">
  <h2>Comments</h2>
  <div class="form-container">    
    <div class="user-container">
        <img class="image-cover-medium" src="{{currentUser.image}}" alt="{{currentUser.username}}'s icon">
    </div>  

    <form action="/comments/{{post.id}}" method="POST" enctype="multipart/form-data">
        <input type="text" name="creator" value="{{currentUser.id}}" hidden>
        <textarea id="input-text" onkeyup="hasContent()" type="textarea" maxlength="240" name="content" placeholder="Type your comment here {{currentUser.username}}" size="100px" cols="40" rows="2"></textarea>
        <br>          
          <img src="" alt="gif selected" class="hidden content-uploaded" id="gif-selected" width="200px">
          <br>
          <p class="hidden media-selected content-uploaded">File succesfully uploaded!</p>            
        <div class="file-gif-post-container">
            <div class="file-gif-post-btns">
              <label for="input-media"><img class="img-input-media"src="/images/File-icon-hover.png"/></label>
              <input id="input-media" onchange="hasMedia()" type="file" name="media">
              <a id="btn-giphys" width="30px"><img src="/images/GIF-icon-hover.png" alt="GIF icon"></a>
              <input id="gif-input" type="text" onchange="hasGif()" name="gif" class="hidden">
            </div>              
            <button class="emit-notification" id="btn-comment" type="submit" data-receiver="{{post.creator.username}}" disabled>COMMENT</button>
        </div>          
    </form>
  </div>
  <br>
  <br>
  <div class="hidden" id="giphy-container">
    <div class="searchBar">
      <div class="search-container">
        <input class="search-input" name="searchInfo" id="searchQueryInput" type="text" name="searchQueryInput" placeholder="Search for GIFs"/>
        <a class="btn-giphy" name="searchQuerySubmit"><img height="30px" src="/images/Search_icon.png" alt="Search icon"></a>
      </div>
      <img height="20px" class="close-gif-btn" src="/images/Close-icon.png" alt="Close icon">
    </div>
    <div id="giphy-list-container">
    </div>
  </div>
  <br>
  <div>
    {{#each comments as | comment |}}
      <div class="post-container post comment" data-id="{{comment.id}}">
        <div class="post-user-container">
          <a class="user-img-post" href="/profile/{{comment.creator.username}}">
              {{#if comment.creator}} 
                <img class="image-cover-medium" src="{{comment.creator.image}}" alt="{{comment.creator.username}}'s icon">
              {{else}}
                <img class="image-cover-medium" src="https://t4.ftcdn.net/jpg/02/29/75/83/360_F_229758328_7x8jwCwjtBMmC6rgFzLFhZoEpLobB6L8.jpg">
              {{/if}}
          </a>
          
          <div class="post-content">
              {{#if comment.creator}}
                <h5>{{comment.creator.username}}</h5>
              {{else}}
                <h5>User no longer exists.</h5>
              {{/if}}
              <p>{{comment.content}}</p>
              {{#if comment.media}}<img src="{{comment.media}}" alt="Media uploaded" width="200px">{{/if}}
              {{#if comment.gif}}<img src="{{comment.gif}}" alt="Gif uploaded" width="200px">{{/if}}
              {{#if comment.sameOwner}} <a id="trash-icon" class="remove" data-id="{{comment.id}}"><img width="20px" src="/images/Trash-icon.png" alt="Trash icon"></a>{{/if}}
          </div>
        </div>   
      </div>            
    {{/each}}
  </div>
</div>


  


<script>
  //AXIOS DELETE COMMENTS
  const removeNodes = document.querySelectorAll('.remove');
  for (let node of removeNodes) {
    node?.addEventListener('click', () => {
      const nodeId = node.dataset.id;
      axios.delete(`/comments/delete/${nodeId}`)
        .then(responseFromApi => {
          console.log('Success!', responseFromApi);
          if (responseFromApi.status == 204) {
            document.querySelector(`.comment[data-id="${nodeId}"]`).remove();
          }
        })
        .catch(error => console.log('Error!', error))
    })
  }

  //UPLOAD CONTENT OR MEDIA
  function hasContent() {
    const btnComment = document.getElementById('btn-comment');
    const inputText = document.getElementById('input-text');
    const inputMedia = document.getElementById('input-media');

    if (inputText.value === '') {
      btnComment.disabled = true;
    } else {
      btnComment.disabled = false;
    }
  };

  function hasMedia() {
    const btnComment = document.getElementById('btn-comment');
    const inputMedia = document.getElementById('input-media');
    const mediaSelected = document.querySelector('.media-selected');

    if (!inputMedia.value) {
      mediaSelected.classList.add('hidden');
      btnComment.disabled = true;
    } else {
      mediaSelected.classList.remove('hidden');
      btnComment.disabled = false;
    }
  };

  function hasGif() {
    const btnComment = document.getElementById('btn-comment');
    const gifInput = document.getElementById('gif-input');
    
    if (!gifInput.value) {
      btnComment.disabled = true;
    } else {
      btnComment.disabled = false;
    }
  };

  //GIPHYS
  const btnGiphys = document.getElementById('btn-giphys');
  const giphyContainer = document.getElementById('giphy-container');
  const giphyListContainer = document.getElementById('giphy-list-container');
  const gifInput = document.getElementById('gif-input');

  //CLOSE GIF CONTAINER
  const btnCloseGiphy = document.querySelector('.close-gif-btn');

  btnCloseGiphy.addEventListener('click', () => {
    giphyContainer.classList.add('hidden')    
  });  

  //AXIOS GIPHYS-LIST
  btnGiphys.addEventListener('click', () => {
    if (giphyContainer.classList.contains('hidden')) {
      giphyContainer.classList.remove('hidden');

      axios.get(`/gifs/list`)
        .then(giphys => {
          const gifSelected = document.getElementById('gif-selected');

          giphys.data.forEach((giphy) => {
            let div = document.createElement('div');
            div.classList.add('gif');

            let image = document.createElement('img');
            image.src = giphy.images.downsized_medium.url;
            image.setAttribute('alt', 'Gif not found');
            image.setAttribute('referrerpolicy', 'no-referrer');
            image.setAttribute('width', '150px');
            image.classList.add('gif-img')

            image.addEventListener('click', () => {
              let src = image.src;
              giphyContainer.classList.add('hidden');
              gifSelected.src = src;
              gifSelected.classList.remove('hidden');

              gifInput.value = src;
              gifInput.dispatchEvent(new Event('change'))
            })

            div.appendChild(image)
            giphyListContainer.appendChild(div);
          })
        })
        .catch(error => console.log('Error!'));
    } else {
      giphyContainer.classList.add('hidden');
      while (giphyListContainer.firstChild) {
        giphyListContainer.removeChild(giphyListContainer.firstChild)
      }
    };
  })

  //AXIOS SEARCH SPECIFIC GIPHY
  const searchInput = document.querySelector('.search-input');
  const btnGiphy = document.querySelector('.btn-giphy');

  btnGiphy.addEventListener('click', () => {
    const gifSearch = searchInput.value

    axios.post(`/gifs/${gifSearch}`)
      .then(giphys => {
        while (giphyListContainer.firstChild) {
          giphyListContainer.removeChild(giphyListContainer.firstChild)
        };

        if (giphys) {
          const gifSelected = document.getElementById('gif-selected');

          giphys.data.forEach((giphy) => {
            let div = document.createElement('div');
            div.classList.add('gif');

            let image = document.createElement('img');
            image.src = giphy.images.downsized_medium.url;
            image.setAttribute('alt', 'Gif not found');
            image.setAttribute('referrerpolicy', 'no-referrer');
            image.setAttribute('width', '150px');
            image.classList.add('gif-img');

            image.addEventListener('click', () => {
              let src = image.src;

              gifSelected.src = src;
              gifSelected.classList.remove('hidden');

              gifInput.value = src;
              gifInput.dispatchEvent(new Event('change'))
              giphyContainer.classList.add('hidden');
            })

            div.appendChild(image)
            giphyListContainer.appendChild(div);
          })
        }
      })
      .catch(error => console.log('Error!'));
  });

  //NOTIFICATION
  const btnComment = document.getElementById('btn-comment');
  receiverUsername = btnComment.getAttribute('data-receiver')

  btnComment.addEventListener('click', () => {
    socket.emit('notification', receiverUsername);
  })
</script>