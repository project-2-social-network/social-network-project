<br>
<h1>Welcome to the home &#128516</h1>
<br>
<div class="container">
    <form action="/home" method="POST" enctype="multipart/form-data">
        <h3>{{currentUser.username}}</h3>
        <input type="text" name="creator" value="{{currentUser.id}}" hidden>
        <input id="input-text" onkeyup="hasContent()" type="text" maxlength="240" name="content" placeholder="What are you thinking?" size="100">
        <input id="input-media" onchange="hasMedia()" type="file" name="media">
        <input type="text" name="giphy" hidden>
        {{!-- <button id="btn-giphy" onclick="showGiphy()">GIPHY</button> --}}
        <button id="btn-post" type="submit" disabled>POST</button>
    </form>
</div>
<br>
<div class="container">
    <h3>POSTS:</h3>
    {{#each listWithoutDuplicates as | post |}}
        <div class="post" data-id="{{post.id}}">
          <a href="/profile/{{post.creator.username}}">
            <img src="{{post.creator.image}}" alt="{{post.creator.username}}'s icon" width="40">        
            <h5>{{post.creator.username}}</h5>
          </a>
          <p>{{post.content}}</p>
          {{#if post.media}}<img src="{{post.media}}" alt="Media uploaded" width="400px">{{/if}}
          {{#if post.sameOwner}} <a class="remove" data-id="{{post.id}}">Delete</a>{{/if}}
          {{#if post.alreadyLiked}}
            <a class="btn-like liked" data-id="{{post.id}}">Unlike</a>
          {{else}}
            <a class="btn-like unliked" data-id="{{post.id}}">Like</a>
          {{/if}}  
          <a href="/post/{{post.id}}/likes" class="likesCount-{{post.id}}">{{post.likesCount}}</a>
          <a href="/comments/{{post.id}}" class="btn-comment" data-id="{{post.id}}">Comments: <ins id="commentsCount">{{post.commentsCount}}</ins></a>  
        </div>
    {{/each}}
</div>


<script>
  //DELETE POST
  const removeNodes = document.querySelectorAll('.remove');
  for(let node of removeNodes) {
    node?.addEventListener('click', () => {
      const nodeId = node.dataset.id;
      axios.delete(`/home/deletePost/${nodeId}`)
        .then(responseFromApi => {
          console.log('Success!', responseFromApi);
          if(responseFromApi.status == 204) {
            document.querySelector(`.post[data-id="${nodeId}"]`).remove();
          }
        })
        .catch(error => console.log('Error!', error))
    })
  }

  //LIKES
  const likeNodes = document.querySelectorAll('.btn-like');

  for(let node of likeNodes) {
      node?.addEventListener('click', () => {
      const dataPostID = node.dataset.id;
      const likesCount = document.querySelector(`.likesCount-${dataPostID}`);

      axios.put(`/like/${dataPostID}`)
      .then(responseFromApi => {
          console.log('Success!', responseFromApi);
          if(responseFromApi.status == 204) {
              if (node.textContent === 'Like') {
              node.textContent = 'Unlike';
              node.classList.remove('unliked');
              node.classList.add('liked');
              likesCount.textContent = Number(likesCount.textContent) + 1;
              } else {
              node.textContent = 'Like';
              node.classList.remove('liked');
              node.classList.add('unliked');
              likesCount.textContent = Number(likesCount.textContent) - 1;
              }
          }
      })
      .catch(error => console.log('Error!', error))
  });
  }

  //UPLOAD CONTENT OR MEDIA
  function hasContent() {
    const btnPost = document.getElementById('btn-post');
    const inputText = document.getElementById('input-text');
    const inputMedia = document.getElementById('input-media');

    if (inputText.value === '') {
      btnPost.disabled = true; 
    } else {
      btnPost.disabled = false; 
    }

     if (!inputMedia.value) {
      btnPost.disabled = true; 
    } else {
      btnPost.disabled = false; 
    }
  }      

  function hasMedia() {
    const btnPost = document.getElementById('btn-post');
    const inputMedia = document.getElementById('input-media');

     if (!inputMedia.value) {
      btnPost.disabled = true; 
    } else {
      btnPost.disabled = false; 
    }
  }

  //AXIOS GIPHYS-LIST
  const btnGiphys = document.getElementById('btn-giphys');
  const giphyContainer = document.getElementById('giphy-container');
  const giphyListContainer = document.getElementById('giphy-list-container');

    btnGiphys.addEventListener('click', () => {
    if(giphyContainer.classList.contains('hidden')) {
      giphyContainer.classList.remove('hidden');

      axios.get(`/gifs/list`)
      .then(giphys => {
          giphys.data.forEach((giphy) => {
            let div = document.createElement('div');
            div.setAttribute('class', 'gif');

            let image = document.createElement('iframe');
            image.src = giphy.embed_url;
            image.setAttribute('alt', 'Gif not found');
            image.setAttribute('referrerpolicy', 'no-referrer');

            div.appendChild(image)
            giphyListContainer.appendChild(div);
          })
      })
      .catch(error => console.log('Error!'));
    } else {
      giphyContainer.classList.add('hidden');
      while(giphyListContainer.firstChild) {
        giphyListContainer.removeChild(giphyListContainer.firstChild)
      }
    };
  })

  //AXIOS SEARCH SPECIFIC GIPHY
  const searchInput = document.getElementById('search-input');
  const btnGiphy = document.getElementById('btn-giphy');

  btnGiphy.addEventListener('click', () => {
    const gifSearch = searchInput.value

    axios.post(`/gifs/${gifSearch}`)
    .then(giphys => {
      while(giphyListContainer.firstChild) {
          giphyListContainer.removeChild(giphyListContainer.firstChild)
      };

      if(giphys) {
        giphys.data.forEach((giphy) => {
          let div = document.createElement('div');
          div.setAttribute('class', 'gif');

          let image = document.createElement('iframe');
          image.src = giphy.embed_url;
          image.setAttribute('alt', 'Gif not found');
          image.setAttribute('referrerpolicy', 'no-referrer');

          div.appendChild(image)
          giphyListContainer.appendChild(div);
        })
      }
    })
    .catch(error => console.log('Error!'));
  });

</script>